 void dfsutil(vector<vector<int>>& image,int sr,int sc, int co,int color)
    {
        if(sr<0 || sc<0 || sr>=image.size()|| sc>=image[0].size()|| image[sr][sc]!=co)
        {
            return;
        }
        image[sr][sc]=color;
        dfsutil(image,sr-1,sc,co,color);
        dfsutil(image,sr,sc-1,co,color);
        dfsutil(image,sr+1,sc,co,color);
        dfsutil(image,sr,sc+1,co,color);
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
        if(image[sr][sc]!=newColor)
        {
            dfsutil(image,sr,sc,image[sr][sc],newColor);
            
        }
        return image;
        
        
        
    }
};
Time Complexity: O(N), where N is the number of pixels in the image. We might process every pixel.

Space Complexity: O(N), the size of the implicit call stack when calling dfs.
