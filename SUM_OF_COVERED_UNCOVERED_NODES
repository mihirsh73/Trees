long Solution::coveredNodes(TreeNode* A) {
    
    
   long cover = 0, uncover = 0;
    queue < TreeNode * > q;
    q.push(A);
   
    while (!q.empty()) {
        int n = q.size();
        for (int i = 0; i < n; i++) {
            TreeNode * node = q.front();
            q.pop();
            if (i == 0 || i == n - 1) {
                uncover += node -> val;
            } else {
                cover += node -> val;
            }
            if (node -> left != NULL)
                q.push(node -> left);
            if (node -> right != NULL)
                q.push(node -> right);
        }
    }
    return abs(cover - uncover);
    
    
}
TC O(N) SC O(N)
