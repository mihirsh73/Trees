 void serial(Node* root, vector<int> &res)
    {
        if(root==NULL)
        {
            res.push_back(-1);
            return;
        }
        res.push_back(root->data);
        serial(root->left,res);
        serial(root->right,res);
    }
    vector<int> serialize(Node *root) 
    {
        //Your code here
        vector<int> res;
        serial(root,res);
        return res;
        
    }
    Node *kewl(vector<int> &A, int &index) 
    {
        //base case if there are no more elements in list.
        if (index == A.size() or A[index] == -1) {
            index += 1;
            return NULL;
        }
        
        //creating new node for storing current element.
        Node *root = new Node(A[index]);
        index += 1;
        
        //calling function recursively for left and right subtrees. 
        root->left = kewl(A, index);
        root->right = kewl(A, index);
        return root;
    }
    Node * deSerialize(vector<int> &A)
    {
       //Your code here
       int index=0;
       return kewl(A,index);
    }
    // TC O(N) SC O(N)
