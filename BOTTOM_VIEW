class Solution {
  public:
   void verticalutil(Node* root,int hd, map<int,vector<int>> &mp, int level){     
        if(root==NULL)
        {
            return;
        }
       
       
           if(mp.find(hd)==mp.end())
           {
             mp[hd].push_back(level);
            mp[hd].push_back(root->data);
           }                                                                                                   //  // TC O(N(LOG(N) SC O(N) 
           else{
               if(mp[hd][0]<=level)
               {
                   mp[hd][0]=level;
                   mp[hd][1]=root->data;
               }
           }
        verticalutil(root->left,hd-1,mp,level+1);
         verticalutil(root->right,hd+1,mp,level+1);
        
    }
    
    vector <int> bottomView(Node *root) {
         vector<int> res;
        map<int, vector<int>> mp;
      
        
        
        verticalutil(root,0,mp,0);
        for(auto x: mp)
        {
            vector<int> r= x.second;
            res.push_back(r[1]);
        }
        return res;
    
    }
};
