/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int count=0;
    void dfs(TreeNode* root, int targetSum, int sum)
    {
        if(root==NULL)
        {
            return;
        }
        sum += root->val;
        if(root->left==NULL && root->right==NULL && sum==targetSum )
        {
            count++;
            return;
        }
       
        dfs(root->left,targetSum,sum);
        dfs(root->right,targetSum,sum);
        
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        if(root==NULL)
        {
            return false;
        }
        int sum=0;
        dfs(root,targetSum,sum);
        if(count!=0)
        {
            return true;
        }
        return false;
        
    }
};
