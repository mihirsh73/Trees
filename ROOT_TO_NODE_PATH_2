//ou are given the root of a binary tree containing digits from 0 to 9 only.

Each root-to-leaf path in the tree represents a number.

For example, the root-to-leaf path 1 -> 2 -> 3 represents the number 123.
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
int path(TreeNode* root, int ans)
    {
        if(root==NULL)
        {
            return 0;
        }
        ans =  ans*10+root->val;
        if(root->left==NULL && root->right==NULL)
        {
          return ans;
        }
        return path(root->left,ans)+path(root->right,ans);
    }
    int sumNumbers(TreeNode* root) {
       
        return path(root,0);
        
        
    }
};
